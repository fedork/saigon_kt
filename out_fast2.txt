> Task :checkKotlinGradlePluginConfigurationErrors SKIPPED
> Task :compileKotlin UP-TO-DATE
> Task :compileJava NO-SOURCE
> Task :processResources NO-SOURCE
> Task :classes UP-TO-DATE

> Task :run
can solve 0 in 0 moves with (1) [] / [] t=7.531250ms
can solve 1 in 1 moves with (1) [] / [0->1(1)] t=12.962084ms
can solve 2 in 2 moves with (1) [] / [0->1(1), 0->1(1)] t=2.594125ms
can solve 3 in 3 moves with (1) [] / [0->1(1), 0->1(1), 0->1(1)] t=637.292us
can solve 4 in 4 moves with (1) [] / [0->1(1), 0->1(1), 0->1(1), 0->1(1)] t=2.159208ms
can solve 5 in 5 moves with (1) [] / [0->1(1), 0->1(1), 0->1(1), 0->1(1), 0->1(1)] t=4.390583ms
can solve 6 in 5 moves with (1) [4, 2] / [0->2(2), 0->4(4), 2->4(2), 4->1(3), 4->1(3)] t=4.957250ms
can solve 7 in 6 moves with (1) [4, 2] / [0->1(1), 0->2(2), 0->4(4), 2->4(2), 4->1(3), 4->1(3)] t=6.658750ms
can solve 8 in 7 moves with (1) [4, 2] / [0->1(1), 0->1(1), 0->2(2), 0->4(4), 2->4(2), 4->1(3), 4->1(3)] t=21.525333ms
can solve 9 in 7 moves with (1) [6, 2] / [0->2(2), 0->6(6), 6->1(5), 1->0(1), 0->2(2), 2->6(4), 6->1(5)] t=2.956584ms
can solve 10 in 6 moves with (1) [6, 2] / [0->2(2), 0->2(2), 0->6(6), 2->6(4), 6->1(5), 6->1(5)] t=30.709us
can solve 11 in 7 moves with (1) [6, 2] / [0->1(1), 0->2(2), 0->2(2), 0->6(6), 2->6(4), 6->1(5), 6->1(5)] t=38.983333ms
can solve 12 in 7 moves with (1) [9, 6, 5, 3] / [0->3(3), 0->9(9), 3->6(3), 6->9(3), 9->1(8), 9->5(4), 5->1(4)] t=26.126916ms
can solve 13 in 8 moves with (1) [9, 6, 5, 3] / [0->1(1), 0->3(3), 0->9(9), 3->6(3), 6->9(3), 9->1(8), 9->5(4), 5->1(4)] t=77.771666ms
can solve 14 in 7 moves with (1) [8, 2] / [0->2(2), 0->2(2), 0->2(2), 0->8(8), 2->8(6), 8->1(7), 8->1(7)] t=35.959us
can solve 15 in 7 moves with (1) [6, 3] / [0->3(3), 0->6(6), 0->6(6), 3->6(3), 6->1(5), 6->1(5), 6->1(5)] t=25.695792ms
can solve 16 in 8 moves with (1) [6, 3] / [0->1(1), 0->3(3), 0->6(6), 0->6(6), 3->6(3), 6->1(5), 6->1(5), 6->1(5)] t=167.544833ms
can solve 17 in 9 moves with (1) [6, 3] / [0->1(1), 0->1(1), 0->3(3), 0->6(6), 0->6(6), 3->6(3), 6->1(5), 6->1(5), 6->1(5)] t=669.972875ms
can solve 18 in 8 moves with (1) [10, 2] / [0->2(2), 0->2(2), 0->2(2), 0->2(2), 0->10(10), 2->10(8), 10->1(9), 10->1(9)] t=66.541us
can solve 19 in 8 moves with (1) [8, 3] / [0->3(3), 0->8(8), 0->8(8), 8->1(7), 1->3(2), 3->8(5), 8->1(7), 8->1(7)] t=282.622292ms
can solve 20 in 9 moves with (1) [8, 3] / [0->1(1), 0->3(3), 0->8(8), 0->8(8), 8->1(7), 1->3(2), 3->8(5), 8->1(7), 8->1(7)] t=1.375874125s
can solve 21 in 8 moves with (1) [15, 9, 8, 3] / [0->3(3), 0->3(3), 0->15(15), 3->9(6), 9->15(6), 15->1(14), 15->8(7), 8->1(7)] t=41.209us
can solve 22 in 8 moves with (1) [12, 8, 6, 4] / [0->4(4), 0->6(6), 0->12(12), 4->8(4), 6->12(6), 8->12(4), 12->1(11), 12->1(11)] t=585.729291ms
can solve 23 in 9 moves with (1) [12, 8, 6, 4] / [0->1(1), 0->4(4), 0->6(6), 0->12(12), 4->8(4), 6->12(6), 8->12(4), 12->1(11), 12->1(11)] t=2.321349s
can solve 24 in 8 moves with (1) [9, 3] / [0->3(3), 0->3(3), 0->9(9), 0->9(9), 3->9(6), 9->1(8), 9->1(8), 9->1(8)] t=32us
can solve 25 in 9 moves with (1) [9, 3] / [0->1(1), 0->3(3), 0->3(3), 0->9(9), 0->9(9), 3->9(6), 9->1(8), 9->1(8), 9->1(8)] t=3.547161917s
can solve 26 in 8 moves with (1) [14, 8, 4] / [0->4(4), 0->8(8), 0->14(14), 4->8(4), 8->14(6), 8->14(6), 14->1(13), 14->1(13)] t=33.125us
can solve 27 in 9 moves with (1) [14, 8, 4] / [0->1(1), 0->4(4), 0->8(8), 0->14(14), 4->8(4), 8->14(6), 8->14(6), 14->1(13), 14->1(13)] t=7.601490709s
can solve 28 in 9 moves with (1) [11, 3] / [0->3(3), 0->3(3), 0->11(11), 0->11(11), 11->1(10), 1->3(2), 3->11(8), 11->1(10), 11->1(10)] t=7.696608083s
processing 31 in 8:  [0->4(4), 0->10(10), 0->11(11), 0->12(12)]
can solve 29 in 10 moves with (1) [11, 3] / [0->1(1), 0->3(3), 0->3(3), 0->11(11), 0->11(11), 11->1(10), 1->3(2), 3->11(8), 11->1(10), 11->1(10)] t=43.510042916s
can solve 30 in 9 moves with (1) [21, 12, 11, 3] / [0->3(3), 0->3(3), 0->3(3), 0->21(21), 3->12(9), 12->21(9), 21->1(20), 21->11(10), 11->1(10)] t=33.334us
can solve 31 in 9 moves with (1) [18, 11, 9, 4] / [0->4(4), 0->9(9), 0->18(18), 9->18(9), 18->1(17), 1->4(3), 4->11(7), 11->18(7), 18->1(17)] t=16.604242500s
processing 32 in 9:  [0->9(9), 0->23(23), 2->1(1), 3->1(2), 1->16(15)]
can solve 32 in 10 moves with (1) [18, 11, 9, 4] / [0->1(1), 0->4(4), 0->9(9), 0->18(18), 9->18(9), 18->1(17), 1->4(3), 4->11(7), 11->18(7), 18->1(17)] t=1m 10.591541834s
can solve 33 in 9 moves with (1) [12, 3] / [0->3(3), 0->3(3), 0->3(3), 0->12(12), 0->12(12), 3->12(9), 12->1(11), 12->1(11), 12->1(11)] t=35.583us
processing 34 in 9:  [0->4(4), 7->0(7), 10->0(10), 13->0(13), 0->16(16)]
can solve 34 in 9 moves with (1) [19, 10, 8, 4] / [0->19(19), 19->8(11), 8->1(7), 8->4(4), 4->0(4), 0->19(19), 19->1(18), 19->10(9), 10->1(9)] t=29.172667375s
can solve 35 in 9 moves with (1) [20, 11, 4] / [0->4(4), 0->11(11), 0->20(20), 11->20(9), 20->1(19), 1->4(3), 4->11(7), 11->20(9), 20->1(19)] t=28.877154583s
processing 36 in 9:  [0->3(3), 0->33(33), 7->1(6), 1->8(7), 1->29(28)]
processing 36 in 9:  [19->0(19), 20->0(20), 0->22(22), 0->23(23), 36->0(36)]
processing 37 in 9:  [0->5(5), 9->0(9), 9->0(9), 10->0(10), 0->11(11)]
processing 37 in 9:  [0->37(37), 4->1(3), 11->1(10), 1->13(12), 37->1(36), 4->19(15)]
can solve 36 in 10 moves with (1) [20, 11, 4] / [0->1(1), 0->4(4), 0->11(11), 0->20(20), 11->20(9), 20->1(19), 1->4(3), 4->11(7), 11->20(9), 20->1(19)] t=3m 36.373688667s
can solve 37 in 10 moves with (1) [20, 12, 10, 4] / [0->4(4), 0->4(4), 0->20(20), 4->12(8), 12->20(8), 20->1(19), 1->0(1), 0->10(10), 10->20(10), 20->1(19)] t=39.307505292s
can solve 38 in 9 moves with (1) [20, 12, 10, 4] / [0->4(4), 0->4(4), 0->10(10), 0->20(20), 4->12(8), 10->20(10), 12->20(8), 20->1(19), 20->1(19)] t=28.166us
processing 40 in 8:  [0->10(10), 0->30(30), 1->21(20), 1->30(29), 1->32(31)]
processing 39 in 9:  [6->0(6), 0->12(12), 0->12(12), 17->0(17), 19->0(19)]
processing 39 in 9:  [24->0(24), 0->27(27), 0->36(36), 9->1(8), 1->14(13)]
processing 40 in 9:  [0->3(3), 0->23(23), 0->27(27), 0->27(27), 40->0(40), 23->1(22)]
can solve 39 in 10 moves with (1) [20, 12, 10, 4] / [0->1(1), 0->4(4), 0->4(4), 0->10(10), 0->20(20), 4->12(8), 10->20(10), 12->20(8), 20->1(19), 20->1(19)] t=3m 33.055786583s
can solve 40 in 9 moves with (1) [25, 10, 9, 5] / [0->5(5), 0->10(10), 0->25(25), 5->10(5), 10->25(15), 25->1(24), 25->9(16), 9->1(8), 9->1(8)] t=26.917us
processing 41 in 9:  [2->0(2), 13->0(13), 0->17(17), 18->0(18), 25->0(25)]
processing 41 in 9:  [7->0(7), 9->0(9), 11->0(11), 0->13(13), 29->0(29)]
processing 41 in 9:  [17->0(17), 0->29(29), 0->29(29), 3->1(2), 1->11(10)]
processing 43 in 8:  [0->43(43), 1->13(12), 27->1(26), 30->1(29), 13->4(9)]
can solve 41 in 10 moves with (1) [25, 10, 9, 5] / [0->1(1), 0->5(5), 0->10(10), 0->25(25), 5->10(5), 10->25(15), 25->1(24), 25->9(16), 9->1(8), 9->1(8)] t=4m 15.196215708s
can solve 42 in 9 moves with (1) [22, 12, 4] / [0->4(4), 0->4(4), 0->12(12), 0->22(22), 4->12(8), 12->22(10), 12->22(10), 22->1(21), 22->1(21)] t=31.916us
processing 44 in 8:  [19->0(19), 0->30(30), 0->33(33), 10->1(9)]
processing 43 in 9:  [4->0(4), 0->14(14), 0->22(22), 28->0(28), 29->0(29)]
processing 43 in 9:  [0->9(9), 0->34(34), 9->1(8), 14->1(13), 1->31(30)]
processing 43 in 9:  [0->19(19), 0->20(20), 22->0(22), 37->0(37), 0->39(39)]
processing 45 in 8:  [0->10(10), 0->11(11), 0->24(24), 9->1(8), 1->11(10)]
processing 44 in 9:  [0->4(4), 0->6(6), 13->0(13), 0->19(19), 0->21(21)]
processing 44 in 9:  [7->0(7), 9->0(9), 0->15(15), 0->35(35), 37->0(37)]
processing 44 in 9:  [0->13(13), 0->31(31), 7->1(6), 20->1(19), 1->34(33)]
processing 44 in 9:  [0->44(44), 1->3(2), 4->1(3), 44->1(43), 5->3(2), 14->3(11)]
can solve 43 in 10 moves with (1) [22, 12, 4] / [0->1(1), 0->4(4), 0->4(4), 0->12(12), 0->22(22), 4->12(8), 12->22(10), 12->22(10), 22->1(21), 22->1(21)] t=8m 47.290718541s
processing 45 in 9:  [0->2(2), 0->2(2), 0->41(41), 2->1(1), 15->1(14), 1->19(18)]
processing 45 in 9:  [4->0(4), 5->0(5), 0->17(17), 31->0(31), 36->0(36)]
processing 45 in 9:  [0->8(8), 0->8(8), 0->8(8), 0->9(9), 0->12(12), 10->1(9)]
processing 45 in 9:  [0->13(13), 0->19(19), 23->0(23), 23->0(23), 0->26(26)]
processing 45 in 9:  [29->0(29), 0->35(35), 0->39(39), 12->1(11), 25->1(24)]
processing 44 in 10:  [0->2(2), 4->0(4), 0->19(19), 0->27(27), 1->22(21), 1->24(23)]
processing 44 in 10:  [0->2(2), 0->21(21), 0->21(21), 21->1(20), 37->1(36), 39->1(38)]
processing 44 in 10:  [2->0(2), 0->7(7), 0->7(7), 13->0(13), 20->0(20), 22->0(22)]
processing 44 in 10:  [0->3(3), 0->3(3), 0->9(9), 0->11(11), 0->18(18), 35->1(34)]
processing 44 in 10:  [0->3(3), 0->16(16), 19->0(19), 0->44(44), 32->1(31), 44->1(43)]
processing 44 in 10:  [3->0(3), 6->0(6), 22->0(22), 22->0(22), 0->32(32), 0->33(33)]
can solve 44 in 10 moves with (1) [12, 4] / [0->4(4), 0->4(4), 0->12(12), 0->12(12), 0->12(12), 4->12(8), 12->1(11), 12->1(11), 12->1(11), 12->1(11)] t=11m 34.600843709s
processing 48 in 7:  [2->0(2), 5->0(5), 5->0(5), 0->6(6)]
processing 46 in 9:  [2->0(2), 0->12(12), 0->21(21), 33->0(33), 34->0(34)]
processing 46 in 9:  [0->5(5), 13->0(13), 0->23(23), 24->0(24), 0->37(37)]
processing 46 in 9:  [0->8(8), 0->38(38), 47->1(46), 7->8(1), 8->17(9), 7->21(14)]
processing 46 in 9:  [0->13(13), 21->0(21), 0->24(24), 0->30(30), 3->1(2)]
processing 46 in 9:  [0->23(23), 0->23(23), 4->1(3), 19->1(18), 23->1(22), 1->34(33)]
processing 45 in 10:  [0->2(2), 0->2(2), 15->0(15), 22->0(22), 0->35(35), 0->37(37)]
processing 45 in 10:  [0->2(2), 12->0(12), 0->16(16), 0->39(39), 46->1(45), 16->2(14), 2->39(37)]
processing 45 in 10:  [2->0(2), 0->3(3), 0->3(3), 11->0(11), 23->0(23), 26->0(26)]
processing 45 in 10:  [2->0(2), 13->0(13), 0->25(25), 31->0(31), 0->37(37)]
processing 45 in 10:  [0->3(3), 6->0(6), 0->10(10), 0->38(38), 1->2(1), 1->36(35)]
processing 45 in 10:  [0->3(3), 0->29(29), 30->0(30), 0->43(43), 1->22(21), 1->24(23)]
processing 45 in 10:  [3->0(3), 0->8(8), 0->40(40), 4->1(3), 4->1(3), 40->1(39), 3->12(9)]
processing 45 in 10:  [0->4(4), 0->4(4), 0->5(5), 0->32(32), 6->1(5), 17->1(16)]
processing 45 in 10:  [0->4(4), 0->14(14), 0->27(27), 1->4(3), 14->1(13), 14->1(13), 18->1(17)]
processing 45 in 10:  [4->0(4), 0->5(5), 0->44(44), 1->11(10), 14->1(13), 23->1(22)]
processing 45 in 10:  [4->0(4), 0->21(21), 0->28(28), 1->13(12), 1->25(24), 1->26(25)]
processing 45 in 10:  [0->5(5), 0->14(14), 15->0(15), 0->41(41), 1->4(3), 16->1(15)]
processing 45 in 10:  [5->0(5), 0->7(7), 10->0(10), 22->0(22), 22->0(22), 0->31(31)]
processing 45 in 10:  [0->6(6), 0->6(6), 0->6(6), 12->0(12), 22->0(22), 0->44(44)]
processing 45 in 10:  [0->6(6), 0->21(21), 32->0(32), 34->0(34), 0->43(43)]
processing 45 in 10:  [6->0(6), 12->0(12), 0->16(16), 0->20(20), 0->27(27), 21->1(20)]
can solve 45 in 10 moves with (1) [17, 9, 6] / [0->17(17), 0->17(17), 17->1(16), 17->6(11), 6->0(6), 0->17(17), 6->1(5), 17->1(16), 17->9(8), 9->1(8)] t=21m 14.000403708s
processing 47 in 9:  [0->2(2), 0->6(6), 9->0(9), 12->0(12), 0->22(22)]
processing 47 in 9:  [0->4(4), 9->0(9), 15->0(15), 0->20(20), 0->39(39)]
processing 47 in 9:  [6->0(6), 0->10(10), 14->0(14), 0->27(27), 39->0(39)]
processing 47 in 9:  [9->0(9), 0->22(22), 0->27(27), 0->30(30), 38->0(38)]
processing 47 in 9:  [14->0(14), 0->18(18), 33->0(33), 36->0(36), 0->44(44)]
processing 47 in 9:  [0->26(26), 0->26(26), 0->28(28), 33->0(33), 48->1(47), 26->34(8)]
processing 46 in 10:  [0->2(2), 0->2(2), 0->42(42), 6->1(5), 34->1(33), 43->1(42)]
processing 46 in 10:  [0->2(2), 0->12(12), 0->12(12), 14->0(14), 0->26(26), 0->31(31)]
processing 46 in 10:  [2->0(2), 2->0(2), 2->0(2), 0->15(15), 0->37(37), 15->1(14), 1->19(18)]
processing 46 in 10:  [2->0(2), 9->0(9), 12->0(12), 12->0(12), 0->18(18), 0->30(30)]
processing 46 in 10:  [0->3(3), 0->3(3), 9->0(9), 16->0(16), 19->0(19), 0->32(32)]
processing 46 in 10:  [0->3(3), 0->12(12), 0->31(31), 12->1(11), 36->1(35), 13->3(10), 3->16(13)]
processing 46 in 10:  [3->0(3), 3->0(3), 7->0(7), 16->0(16), 0->24(24), 0->31(31)]
processing 46 in 10:  [3->0(3), 0->12(12), 20->0(20), 0->27(27), 0->30(30), 1->10(9)]
processing 46 in 10:  [0->4(4), 5->0(5), 35->0(35), 0->37(37), 0->45(45), 14->1(13)]
processing 46 in 10:  [0->4(4), 0->19(19), 0->23(23), 1->13(12), 1->36(35), 42->1(41)]
processing 46 in 10:  [4->0(4), 0->7(7), 0->7(7), 8->0(8), 12->0(12), 0->22(22)]
processing 46 in 10:  [4->0(4), 23->0(23), 23->0(23), 0->24(24), 0->32(32), 0->39(39)]
can solve 46 in 10 moves with (1) [25, 12, 8, 4] / [0->25(25), 25->12(13), 12->8(4), 8->4(4), 4->0(4), 0->25(25), 25->1(24), 25->12(13), 12->1(11), 12->1(11)] t=17m 50.100163500s
processing 48 in 9:  [0->2(2), 0->13(13), 0->33(33), 1->9(8), 26->1(25)]
processing 48 in 9:  [0->4(4), 0->8(8), 0->36(36), 1->25(24), 1->37(36)]
processing 48 in 9:  [0->6(6), 0->19(19), 0->23(23), 8->1(7), 1->22(21)]
processing 48 in 9:  [0->9(9), 12->0(12), 0->19(19), 30->0(30), 0->32(32)]
processing 48 in 9:  [0->13(13), 0->13(13), 0->13(13), 0->21(21), 0->21(21), 0->22(22)]
processing 48 in 9:  [0->19(19), 0->29(29), 12->1(11), 1->15(14), 1->15(14), 29->1(28)]
processing 48 in 9:  [0->48(48), 6->1(5), 24->1(23), 1->40(39), 1->40(39), 1->48(47)]
processing 47 in 10:  [0->2(2), 4->0(4), 0->7(7), 0->42(42), 1->6(5), 26->1(25)]
processing 47 in 10:  [0->2(2), 0->14(14), 0->31(31), 3->1(2), 1->14(13), 1->20(19)]
processing 47 in 10:  [2->0(2), 2->0(2), 6->0(6), 0->21(21), 0->23(23), 31->0(31)]
processing 47 in 10:  [2->0(2), 0->9(9), 0->40(40), 1->18(17), 20->1(19), 1->44(43)]
processing 47 in 10:  [0->3(3), 0->3(3), 0->3(3), 8->0(8), 12->0(12), 29->0(29)]
processing 47 in 10:  [0->3(3), 0->10(10), 14->0(14), 0->15(15), 28->0(28)]
processing 47 in 10:  [0->3(3), 0->44(44), 1->4(3), 1->6(5), 20->1(19), 23->1(22)]
processing 47 in 10:  [3->0(3), 6->0(6), 0->7(7), 0->7(7), 0->7(7), 35->0(35)]
processing 47 in 10:  [3->0(3), 18->0(18), 0->31(31), 0->37(37), 1->9(8), 36->1(35)]
can solve 47 in 10 moves with (1) [26, 15, 13, 4] / [0->4(4), 0->4(4), 0->13(13), 0->26(26), 13->26(13), 26->1(25), 1->4(3), 4->15(11), 15->26(11), 26->1(25)] t=16m 26.318051833s
processing 50 in 8:  [0->13(13), 17->0(17), 0->27(27), 35->0(35)]
processing 49 in 9:  [0->3(3), 0->4(4), 11->0(11), 0->14(14), 0->20(20)]
processing 49 in 9:  [4->0(4), 0->12(12), 13->0(13), 0->16(16), 0->18(18)]
processing 49 in 9:  [6->0(6), 0->13(13), 0->42(42), 1->3(2), 1->26(25)]
processing 49 in 9:  [0->9(9), 0->17(17), 18->0(18), 23->0(23), 38->0(38)]
processing 49 in 9:  [0->12(12), 0->37(37), 1->14(13), 18->1(17), 18->1(17), 29->1(28)]
processing 49 in 9:  [0->17(17), 0->32(32), 7->1(6), 20->1(19), 1->46(45)]
processing 49 in 9:  [28->0(28), 28->0(28), 30->0(30), 47->0(47), 0->49(49)]
processing 48 in 10:  [0->2(2), 0->2(2), 0->5(5), 18->0(18), 0->27(27), 33->0(33)]
processing 48 in 10:  [0->2(2), 7->0(7), 22->0(22), 0->27(27), 0->27(27), 0->31(31)]
processing 48 in 10:  [0->2(2), 0->20(20), 0->26(26), 1->3(2), 10->1(9), 1->28(27)]
processing 48 in 10:  [2->0(2), 2->0(2), 30->0(30), 0->36(36), 0->46(46), 1->5(4)]
processing 48 in 10:  [2->0(2), 9->0(9), 0->27(27), 0->32(32), 1->3(2), 1->28(27)]
processing 48 in 10:  [2->0(2), 25->0(25), 0->27(27), 0->48(48), 15->1(14), 1->16(15)]
processing 48 in 10:  [0->3(3), 7->0(7), 15->0(15), 15->0(15), 0->41(41), 0->41(41), 7->1(6)]
processing 48 in 10:  [0->3(3), 19->0(19), 0->22(22), 24->0(24), 24->0(24), 0->40(40)]
processing 48 in 10:  [3->0(3), 0->4(4), 0->18(18), 0->29(29), 1->28(27), 31->1(30)]
processing 48 in 10:  [3->0(3), 12->0(12), 13->0(13), 16->0(16), 0->32(32)]
processing 48 in 10:  [0->4(4), 0->4(4), 17->0(17), 0->21(21), 26->0(26), 0->35(35)]
processing 48 in 10:  [0->4(4), 12->0(12), 0->15(15), 0->41(41), 1->7(6), 1->18(17)]
processing 48 in 10:  [0->4(4), 0->44(44), 1->9(8), 31->1(30), 31->1(30), 1->48(47)]
processing 48 in 10:  [4->0(4), 0->9(9), 0->43(43), 1->18(17), 1->40(39), 1->49(48)]
processing 48 in 10:  [4->0(4), 0->25(25), 0->33(33), 0->33(33), 36->0(36), 37->0(37)]
processing 48 in 10:  [0->5(5), 10->0(10), 0->24(24), 0->29(29), 10->1(9), 1->14(13)]
processing 48 in 10:  [0->5(5), 41->0(41), 0->42(42), 0->42(42), 11->1(10), 34->1(33)]
processing 48 in 10:  [5->0(5), 0->9(9), 0->9(9), 21->0(21), 0->24(24), 0->48(48)]
processing 48 in 10:  [5->0(5), 0->23(23), 0->30(30), 15->1(14), 1->33(32), 1->46(45)]
can solve 48 in 10 moves with (1) [33, 18, 17, 12, 9, 6] / [0->6(6), 0->9(9), 0->33(33), 6->12(6), 9->18(9), 12->18(6), 18->33(15), 33->1(32), 33->17(16), 17->1(16)] t=27m 16.964030958s
processing 51 in 8:  [0->4(4), 0->4(4), 0->4(4), 0->10(10), 23->0(23)]
processing 50 in 9:  [0->2(2), 18->0(18), 21->0(21), 27->0(27), 39->0(39)]
processing 50 in 9:  [3->0(3), 14->0(14), 0->21(21), 22->0(22), 25->0(25)]
processing 50 in 9:  [5->0(5), 5->0(5), 0->30(30), 0->30(30), 1->32(31), 43->1(42)]
processing 50 in 9:  [7->0(7), 7->0(7), 0->23(23), 0->41(41), 1->7(6), 1->9(8)]
processing 50 in 9:  [9->0(9), 27->0(27), 0->43(43), 0->43(43), 21->1(20)]
processing 50 in 9:  [12->0(12), 0->30(30), 0->32(32), 30->1(29), 30->1(29), 35->1(34)]
processing 50 in 9:  [0->17(17), 0->33(33), 1->2(1), 19->1(18), 34->1(33), 2->33(31)]
processing 50 in 9:  [0->25(25), 0->25(25), 8->1(7), 8->1(7), 10->1(9), 25->1(24)]
processing 50 in 9:  [0->50(50), 1->18(17), 19->1(18), 1->23(22), 1->30(29)]
processing 49 in 10:  [0->2(2), 0->5(5), 0->11(11), 0->31(31), 1->27(26), 1->34(33)]
processing 49 in 10:  [0->2(2), 12->0(12), 0->14(14), 24->0(24), 33->0(33)]
processing 49 in 10:  [0->2(2), 0->47(47), 2->1(1), 1->28(27), 1->28(27), 1->28(27), 1->41(40)]
processing 49 in 10:  [2->0(2), 4->0(4), 4->0(4), 0->13(13), 0->23(23), 0->32(32)]
processing 49 in 10:  [2->0(2), 11->0(11), 11->0(11), 24->0(24), 0->27(27), 35->0(35)]
processing 49 in 10:  [2->0(2), 31->0(31), 0->41(41), 0->41(41), 1->2(1), 1->24(23), 1->31(30)]
processing 49 in 10:  [0->3(3), 7->0(7), 15->0(15), 0->17(17), 0->17(17), 0->27(27)]
processing 49 in 10:  [0->3(3), 17->0(17), 0->18(18), 0->45(45), 6->1(5), 19->1(18)]
processing 49 in 10:  [3->0(3), 3->0(3), 5->0(5), 15->0(15), 21->0(21), 0->32(32)]
processing 49 in 10:  [3->0(3), 0->9(9), 0->9(9), 10->0(10), 0->44(44), 1->10(9), 1->44(43)]
processing 49 in 10:  [3->0(3), 0->21(21), 0->21(21), 35->0(35), 39->0(39), 0->46(46)]
processing 49 in 10:  [0->4(4), 5->0(5), 0->6(6), 9->0(9), 12->0(12)]
processing 49 in 10:  [0->4(4), 0->13(13), 16->0(16), 20->0(20), 20->0(20), 0->22(22)]
processing 49 in 10:  [0->4(4), 0->45(45), 4->1(3), 4->1(3), 44->1(43), 4->9(5), 4->23(19)]
processing 49 in 10:  [4->0(4), 0->7(7), 11->0(11), 0->22(22), 0->30(30)]
processing 49 in 10:  [4->0(4), 0->16(16), 0->37(37), 1->9(8), 1->35(34), 44->1(43)]
processing 49 in 10:  [0->5(5), 0->6(6), 0->6(6), 0->32(32), 6->1(5), 20->1(19), 1->32(31)]
processing 49 in 10:  [0->5(5), 13->0(13), 0->26(26), 0->31(31), 1->23(22), 25->1(24)]
processing 49 in 10:  [0->5(5), 0->44(44), 1->7(6), 1->18(17), 32->1(31), 1->34(33)]
processing 49 in 10:  [5->0(5), 9->0(9), 0->12(12), 0->13(13), 0->38(38), 17->1(16)]
processing 49 in 10:  [5->0(5), 22->0(22), 0->29(29), 0->47(47), 11->1(10), 15->1(14)]
processing 49 in 10:  [0->6(6), 0->10(10), 0->17(17), 27->0(27), 0->43(43), 1->14(13)]
processing 49 in 10:  [0->6(6), 24->0(24), 0->26(26), 0->41(41), 27->1(26), 1->36(35)]
processing 49 in 10:  [6->0(6), 0->8(8), 0->47(47), 1->3(2), 1->6(5), 1->28(27)]
processing 49 in 10:  [6->0(6), 19->0(19), 0->22(22), 0->22(22), 0->25(25), 30->0(30)]
processing 49 in 10:  [0->7(7), 10->0(10), 0->19(19), 0->20(20), 29->0(29), 0->42(42)]
processing 49 in 10:  [0->7(7), 28->0(28), 0->34(34), 0->34(34), 40->0(40), 44->0(44)]
processing 49 in 10:  [7->0(7), 0->10(10), 0->46(46), 3->1(2), 1->5(4), 1->35(34)]
processing 49 in 10:  [7->0(7), 0->26(26), 0->30(30), 3->1(2), 10->1(9), 14->1(13)]
processing 49 in 10:  [0->8(8), 0->15(15), 0->15(15), 0->19(19), 0->23(23), 0->32(32)]
processing 49 in 10:  [0->8(8), 0->41(41), 19->1(18), 1->23(22), 25->1(24), 1->26(25)]
processing 49 in 10:  [8->0(8), 0->17(17), 19->0(19), 20->0(20), 0->36(36)]
processing 49 in 10:  [0->9(9), 0->12(12), 0->13(13), 0->15(15), 1->39(38), 44->1(43)]
processing 49 in 10:  [0->9(9), 36->0(36), 0->38(38), 0->38(38), 4->1(3), 9->1(8)]
processing 49 in 10:  [9->0(9), 0->13(13), 0->45(45), 1->16(15), 1->22(21), 26->1(25)]
processing 49 in 10:  [0->10(10), 0->10(10), 0->19(19), 0->20(20), 22->0(22), 28->0(28)]
processing 49 in 10:  [0->10(10), 0->26(26), 36->0(36), 0->49(49), 1->21(20), 1->22(21)]
processing 49 in 10:  [10->0(10), 0->14(14), 0->17(17), 0->28(28), 1->3(2), 1->33(32)]
processing 49 in 10:  [0->11(11), 0->12(12), 0->13(13), 0->13(13), 1->11(10), 24->1(23)]
can solve 49 in 10 moves with (1) [19, 11, 6] / [0->11(11), 0->19(19), 0->19(19), 11->19(8), 19->1(18), 1->6(5), 6->11(5), 11->19(8), 19->1(18), 19->1(18)] t=48m 49.722215833s
processing 52 in 8:  [0->7(7), 13->0(13), 13->0(13), 51->0(51)]
processing 51 in 9:  [0->2(2), 39->0(39), 0->43(43), 0->45(45), 1->17(16)]
processing 51 in 9:  [3->0(3), 12->0(12), 0->23(23), 36->0(36), 0->40(40)]
processing 51 in 9:  [0->5(5), 17->0(17), 22->0(22), 24->0(24), 47->0(47)]
processing 51 in 9:  [0->7(7), 0->10(10), 0->17(17), 0->42(42), 43->0(43)]
processing 51 in 9:  [0->9(9), 0->15(15), 0->27(27), 1->16(15), 1->46(45)]
processing 51 in 9:  [11->0(11), 0->21(21), 27->0(27), 34->0(34), 0->47(47)]
processing 51 in 9:  [0->15(15), 0->36(36), 1->4(3), 8->1(7), 22->1(21)]
processing 51 in 9:  [20->0(20), 0->29(29), 0->42(42), 1->10(9), 1->37(36)]
processing 51 in 9:  [0->51(51), 1->3(2), 11->1(10), 1->12(11), 18->1(17)]
processing 50 in 10:  [0->2(2), 0->2(2), 0->11(11), 13->0(13), 16->0(16), 38->0(38)]
processing 50 in 10:  [0->2(2), 0->7(7), 0->23(23), 29->0(29), 0->47(47), 3->1(2)]
processing 50 in 10:  [0->2(2), 15->0(15), 15->0(15), 24->0(24), 29->0(29), 0->36(36)]
processing 50 in 10:  [0->2(2), 0->48(48), 5->1(4), 8->1(7), 1->16(15), 1->18(17)]
processing 50 in 10:  [2->0(2), 4->0(4), 8->0(8), 19->0(19), 40->0(40)]
processing 50 in 10:  [2->0(2), 0->11(11), 22->0(22), 27->0(27), 27->0(27), 45->0(45)]
processing 50 in 10:  [2->0(2), 0->25(25), 0->26(26), 30->0(30), 0->34(34)]
processing 50 in 10:  [0->3(3), 0->6(6), 0->11(11), 13->0(13), 0->16(16)]
processing 50 in 10:  [0->3(3), 0->13(13), 0->35(35), 0->48(48), 49->0(49), 1->8(7)]
processing 50 in 10:  [0->3(3), 0->47(47), 3->1(2), 1->7(6), 1->14(13), 1->31(30)]
processing 50 in 10:  [3->0(3), 5->0(5), 11->0(11), 12->0(12), 12->0(12), 0->22(22)]
processing 50 in 10:  [3->0(3), 0->13(13), 0->18(18), 0->22(22), 26->1(25), 1->35(34)]
processing 50 in 10:  [0->4(4), 0->4(4), 0->4(4), 10->0(10), 0->48(48), 1->4(3), 1->36(35)]
processing 50 in 10:  [0->4(4), 0->9(9), 0->13(13), 0->24(24), 17->1(16), 48->1(47)]
processing 50 in 10:  [0->4(4), 18->0(18), 0->19(19), 0->19(19), 0->37(37), 0->42(42)]
processing 50 in 10:  [0->4(4), 0->46(46), 1->27(26), 1->30(29), 33->1(32), 1->45(44)]
processing 50 in 10:  [4->0(4), 0->9(9), 12->0(12), 23->0(23), 23->0(23), 25->0(25)]
processing 50 in 10:  [4->0(4), 19->0(19), 0->34(34), 0->39(39), 4->1(3), 1->16(15)]
can solve 50 in 10 moves with (1) [27, 14, 12, 8, 4] / [0->27(27), 27->12(15), 12->1(11), 12->8(4), 8->4(4), 4->0(4), 0->27(27), 27->1(26), 27->14(13), 14->1(13)] t=27m 44.673445958s
processing 53 in 8:  [0->13(13), 0->40(40), 54->1(53), 13->33(20), 36->13(23)]
processing 52 in 9:  [2->0(2), 5->0(5), 0->26(26), 0->43(43), 0->45(45)]
processing 52 in 9:  [3->0(3), 16->0(16), 16->0(16), 28->0(28), 31->0(31)]
processing 52 in 9:  [0->5(5), 0->13(13), 24->0(24), 36->0(36), 0->39(39)]
processing 52 in 9:  [6->0(6), 18->0(18), 0->21(21), 0->25(25), 0->27(27)]
processing 52 in 9:  [8->0(8), 13->0(13), 0->29(29), 0->44(44), 53->1(52), 8->29(21)]
processing 52 in 9:  [10->0(10), 0->30(30), 0->32(32), 1->12(11), 16->1(15)]
processing 52 in 9:  [13->0(13), 21->0(21), 0->26(26), 0->34(34), 0->47(47)]
processing 52 in 9:  [17->0(17), 0->22(22), 0->31(31), 41->0(41), 45->0(45)]
processing 52 in 9:  [0->24(24), 0->28(28), 1->11(10), 36->1(35), 41->1(40)]
processing 52 in 9:  [0->52(52), 6->1(5), 1->8(7), 1->17(16), 37->1(36)]
processing 51 in 10:  [0->2(2), 0->2(2), 0->17(17), 27->0(27), 0->30(30), 0->31(31)]
processing 51 in 10:  [0->2(2), 0->7(7), 25->0(25), 0->29(29), 0->38(38), 9->1(8)]
processing 51 in 10:  [0->2(2), 14->0(14), 0->26(26), 0->37(37), 1->15(14), 1->17(16)]
processing 51 in 10:  [0->2(2), 0->49(49), 1->3(2), 10->1(9), 1->13(12), 1->31(30)]
processing 51 in 10:  [2->0(2), 0->4(4), 0->4(4), 0->6(6), 29->0(29), 51->0(51)]
processing 51 in 10:  [2->0(2), 9->0(9), 0->10(10), 0->10(10), 0->17(17), 25->0(25)]
processing 51 in 10:  [2->0(2), 0->19(19), 0->31(31), 35->0(35), 0->38(38), 15->1(14)]
processing 51 in 10:  [0->3(3), 0->4(4), 0->9(9), 30->0(30), 0->42(42)]
processing 51 in 10:  [0->3(3), 9->0(9), 0->19(19), 0->19(19), 0->19(19), 3->1(2), 29->1(28)]
processing 51 in 10:  [0->3(3), 0->19(19), 0->29(29), 21->1(20), 22->1(21), 1->35(34)]
processing 51 in 10:  [0->3(3), 0->48(48), 1->37(36), 41->1(40), 48->1(47), 16->3(13), 3->19(16)]
processing 51 in 10:  [3->0(3), 0->7(7), 19->0(19), 25->0(25), 0->29(29)]
processing 51 in 10:  [3->0(3), 0->15(15), 0->16(16), 21->0(21), 0->44(44), 1->18(17)]
processing 51 in 10:  [0->4(4), 0->4(4), 0->6(6), 0->9(9), 0->30(30), 32->0(32)]
can solve 51 in 10 moves with (1) [28, 15, 4] / [0->4(4), 0->4(4), 0->15(15), 0->28(28), 15->28(13), 28->1(27), 1->4(3), 4->15(11), 15->28(13), 28->1(27)] t=24m 49.020310833s
processing 54 in 8:  [18->0(18), 23->0(23), 0->24(24), 43->0(43)]
processing 53 in 9:  [2->0(2), 7->0(7), 32->0(32), 39->0(39), 0->46(46)]
processing 53 in 9:  [3->0(3), 16->0(16), 0->17(17), 0->23(23), 0->46(46)]
processing 53 in 9:  [0->5(5), 7->0(7), 12->0(12), 37->0(37), 0->44(44)]
processing 53 in 9:  [0->6(6), 0->25(25), 0->26(26), 0->39(39), 43->0(43)]
processing 53 in 9:  [7->0(7), 0->27(27), 39->0(39), 42->0(42), 49->0(49)]
processing 53 in 9:  [9->0(9), 17->0(17), 0->20(20), 25->0(25), 28->0(28)]
processing 53 in 9:  [0->12(12), 0->12(12), 0->29(29), 3->1(2), 1->12(11), 1->46(45)]
processing 53 in 9:  [14->0(14), 0->26(26), 37->0(37), 42->0(42), 47->0(47)]
processing 53 in 9:  [18->0(18), 0->25(25), 0->28(28), 0->34(34), 0->43(43)]
processing 53 in 9:  [0->25(25), 0->28(28), 9->1(8), 22->1(21), 25->1(24), 5->9(4)]
processing 53 in 9:  [0->53(53), 8->1(7), 11->1(10), 1->34(33), 35->1(34)]
processing 52 in 10:  [0->2(2), 0->2(2), 21->0(21), 21->0(21), 23->0(23), 0->25(25)]
processing 52 in 10:  [0->2(2), 0->7(7), 0->9(9), 22->0(22), 22->0(22), 35->0(35)]
processing 52 in 10:  [0->2(2), 13->0(13), 13->0(13), 23->0(23), 0->46(46), 0->50(50)]
processing 52 in 10:  [0->2(2), 0->26(26), 0->33(33), 0->40(40), 49->0(49), 1->30(29)]
processing 52 in 10:  [2->0(2), 2->0(2), 11->0(11), 0->14(14), 38->0(38), 0->40(40)]
processing 52 in 10:  [2->0(2), 6->0(6), 0->13(13), 0->47(47), 12->1(11), 1->38(37)]
processing 52 in 10:  [2->0(2), 0->13(13), 16->0(16), 0->21(21), 0->29(29)]
processing 52 in 10:  [2->0(2), 0->25(25), 0->29(29), 16->1(15), 20->1(19), 1->27(26)]
processing 52 in 10:  [0->3(3), 0->5(5), 0->10(10), 15->0(15), 18->0(18)]
processing 52 in 10:  [0->3(3), 10->0(10), 11->0(11), 11->0(11), 39->0(39), 42->0(42)]
processing 52 in 10:  [0->3(3), 19->0(19), 0->27(27), 0->41(41), 15->1(14), 16->1(15)]
processing 52 in 10:  [0->3(3), 0->49(49), 1->19(18), 23->1(22), 28->1(27), 1->39(38)]
processing 52 in 10:  [3->0(3), 0->6(6), 0->24(24), 37->0(37), 37->0(37), 0->48(48)]
processing 52 in 10:  [3->0(3), 12->0(12), 13->0(13), 0->34(34), 0->46(46), 1->6(5)]
processing 52 in 10:  [3->0(3), 0->24(24), 0->31(31), 29->1(28), 1->36(35), 47->1(46)]
processing 52 in 10:  [0->4(4), 0->6(6), 0->21(21), 0->21(21), 17->1(16), 21->1(20)]
processing 52 in 10:  [0->4(4), 0->12(12), 0->36(36), 4->1(3), 6->1(5), 1->35(34)]
processing 52 in 10:  [0->4(4), 0->23(23), 0->30(30), 0->32(32), 0->36(36)]
processing 52 in 10:  [4->0(4), 4->0(4), 0->7(7), 13->0(13), 43->0(43), 44->0(44)]
processing 52 in 10:  [4->0(4), 8->0(8), 0->18(18), 0->20(20), 26->0(26), 0->52(52)]
processing 52 in 10:  [4->0(4), 0->16(16), 0->40(40), 16->1(15), 38->1(37), 11->4(7), 4->16(12)]
processing 52 in 10:  [0->5(5), 0->5(5), 0->7(7), 0->35(35), 3->1(2), 3->1(2), 49->1(48)]
processing 52 in 10:  [0->5(5), 9->0(9), 0->22(22), 0->32(32), 0->44(44)]
processing 52 in 10:  [0->5(5), 17->0(17), 32->0(32), 0->47(47), 0->49(49), 1->23(22)]
processing 52 in 10:  [0->5(5), 0->47(47), 9->1(8), 1->15(14), 20->1(19), 23->1(22)]
processing 52 in 10:  [5->0(5), 0->8(8), 0->18(18), 0->31(31), 1->12(11), 1->42(41)]
processing 52 in 10:  [5->0(5), 15->0(15), 0->27(27), 0->44(44), 46->0(46), 0->47(47)]
processing 52 in 10:  [0->6(6), 0->6(6), 0->7(7), 0->7(7), 0->16(16), 0->38(38)]
processing 52 in 10:  [0->6(6), 0->11(11), 0->13(13), 0->22(22), 27->0(27)]
processing 52 in 10:  [0->6(6), 20->0(20), 25->0(25), 0->44(44), 0->49(49)]
processing 52 in 10:  [0->6(6), 0->46(46), 27->1(26), 37->1(36), 37->1(36), 1->41(40)]
processing 52 in 10:  [6->0(6), 0->11(11), 12->0(12), 20->0(20), 0->38(38)]
processing 52 in 10:  [6->0(6), 0->21(21), 31->0(31), 31->0(31), 0->33(33), 0->34(34)]
processing 52 in 10:  [0->7(7), 8->0(8), 0->14(14), 0->18(18), 0->44(44)]
processing 52 in 10:  [0->7(7), 0->16(16), 22->0(22), 0->51(51), 28->1(27), 49->1(48)]
processing 52 in 10:  [0->7(7), 0->45(45), 1->5(4), 16->1(15), 21->1(20), 27->1(26)]
processing 52 in 10:  [7->0(7), 0->10(10), 0->11(11), 0->11(11), 0->27(27), 13->1(12)]
processing 52 in 10:  [7->0(7), 0->19(19), 0->29(29), 32->0(32), 0->43(43), 40->1(39)]
processing 52 in 10:  [0->8(8), 0->9(9), 18->0(18), 0->24(24), 0->43(43)]
processing 52 in 10:  [0->8(8), 0->17(17), 24->0(24), 0->51(51), 2->1(1), 1->11(10)]
processing 52 in 10:  [0->8(8), 0->44(44), 7->1(6), 16->1(15), 19->1(18), 1->34(33)]
processing 52 in 10:  [8->0(8), 11->0(11), 0->22(22), 0->37(37), 0->37(37), 47->0(47)]
processing 52 in 10:  [8->0(8), 22->0(22), 0->38(38), 0->44(44), 2->1(1), 12->1(11)]
processing 52 in 10:  [0->9(9), 11->0(11), 0->20(20), 0->34(34), 20->1(19), 34->1(33), 9->35(26)]
processing 52 in 10:  [0->9(9), 0->22(22), 0->26(26), 0->34(34), 39->0(39), 1->7(6)]
processing 52 in 10:  [9->0(9), 9->0(9), 0->13(13), 0->27(27), 0->28(28), 33->0(33)]
processing 52 in 10:  [9->0(9), 0->17(17), 0->44(44), 17->1(16), 22->1(21), 29->1(28)]
processing 52 in 10:  [0->10(10), 0->10(10), 0->32(32), 2->1(1), 1->8(7), 1->8(7), 1->10(9)]
processing 52 in 10:  [0->10(10), 19->0(19), 0->23(23), 0->38(38), 1->23(22), 32->1(31)]
processing 52 in 10:  [0->10(10), 0->42(42), 20->1(19), 24->1(23), 39->1(38), 46->1(45)]
processing 52 in 10:  [10->0(10), 0->17(17), 0->20(20), 36->0(36), 39->0(39)]
processing 52 in 10:  [0->11(11), 0->11(11), 0->20(20), 30->0(30), 42->0(42), 45->0(45)]
processing 52 in 10:  [0->11(11), 0->21(21), 22->0(22), 0->37(37), 0->43(43)]
processing 52 in 10:  [0->11(11), 0->46(46), 0->46(46), 51->0(51), 1->5(4), 7->1(6), 51->1(50)]
processing 52 in 10:  [11->0(11), 20->0(20), 0->34(34), 0->49(49), 1->3(2), 20->1(19)]
processing 52 in 10:  [0->12(12), 14->0(14), 0->25(25), 0->29(29), 1->20(19), 1->24(23)]
processing 52 in 10:  [0->12(12), 0->38(38), 43->0(43), 0->45(45), 1->22(21), 34->1(33)]
processing 52 in 10:  [12->0(12), 0->15(15), 38->0(38), 0->43(43), 46->0(46)]
processing 52 in 10:  [12->0(12), 0->32(32), 0->32(32), 53->1(52), 12->4(8), 12->23(11), 43->12(31)]
processing 52 in 10:  [0->13(13), 0->23(23), 36->0(36), 0->52(52), 1->29(28), 30->1(29)]
processing 52 in 10:  [13->0(13), 13->0(13), 0->27(27), 0->51(51), 21->1(20), 28->1(27)]
processing 52 in 10:  [13->0(13), 0->28(28), 0->37(37), 8->1(7), 1->34(33), 1->51(50)]
processing 52 in 10:  [0->14(14), 22->0(22), 38->0(38), 0->46(46), 0->46(46), 48->0(48)]
processing 52 in 10:  [14->0(14), 14->0(14), 22->0(22), 31->0(31), 0->40(40), 43->0(43)]
processing 52 in 10:  [14->0(14), 0->30(30), 0->36(36), 24->1(23), 1->27(26), 1->36(35)]
processing 52 in 10:  [0->15(15), 0->29(29), 36->0(36), 0->44(44), 19->1(18), 1->27(26)]
processing 52 in 10:  [15->0(15), 17->0(17), 30->0(30), 45->0(45), 0->48(48)]
processing 52 in 10:  [0->16(16), 0->17(17), 0->26(26), 0->27(27), 34->0(34), 1->15(14)]
processing 52 in 10:  [0->16(16), 0->36(36), 1->12(11), 1->36(35), 1->44(43), 48->1(47)]
processing 52 in 10:  [16->0(16), 26->0(26), 0->29(29), 0->35(35), 0->49(49)]
processing 52 in 10:  [0->17(17), 0->32(32), 0->36(36), 0->37(37), 0->47(47)]
processing 52 in 10:  [17->0(17), 0->21(21), 0->48(48), 6->1(5), 1->14(13), 24->1(23)]
processing 52 in 10:  [0->18(18), 0->26(26), 34->0(34), 36->0(36), 52->0(52)]
processing 52 in 10:  [18->0(18), 20->0(20), 21->0(21), 21->0(21), 0->28(28), 0->36(36)]
processing 52 in 10:  [0->19(19), 0->26(26), 40->0(40), 0->47(47), 17->1(16), 1->38(37)]
processing 52 in 10:  [19->0(19), 0->22(22), 32->0(32), 0->35(35), 0->46(46), 1->11(10)]
processing 52 in 10:  [0->20(20), 0->32(32), 2->1(1), 1->15(14), 32->1(31), 35->1(34), 2->15(13)]
processing 52 in 10:  [20->0(20), 0->27(27), 0->45(45), 20->1(19), 20->1(19), 22->1(21), 1->45(44)]
processing 52 in 10:  [0->21(21), 0->31(31), 12->1(11), 25->1(24), 26->1(25), 39->1(38)]
processing 52 in 10:  [0->22(22), 0->22(22), 37->0(37), 0->45(45), 53->1(52), 37->22(15), 22->45(23)]
processing 52 in 10:  [22->0(22), 23->0(23), 23->0(23), 0->29(29), 0->29(29), 30->0(30)]
processing 52 in 10:  [0->23(23), 0->29(29), 1->11(10), 1->38(37), 1->39(38), 1->42(41)]
processing 52 in 10:  [0->24(24), 0->26(26), 29->0(29), 35->0(35), 35->0(35), 42->0(42)]
processing 52 in 10:  [24->0(24), 0->30(30), 43->0(43), 45->0(45), 52->0(52)]
processing 52 in 10:  [0->25(25), 0->31(31), 0->45(45), 49->0(49), 1->8(7), 1->12(11)]
processing 52 in 10:  [0->26(26), 0->26(26), 10->1(9), 19->1(18), 26->1(25), 19->10(9), 26->19(7), 19->27(8)]
processing 52 in 10:  [26->0(26), 0->34(34), 0->36(36), 42->0(42), 0->43(43), 0->43(43)]
processing 52 in 10:  [28->0(28), 0->32(32), 43->0(43), 0->44(44), 0->47(47), 1->12(11)]
processing 52 in 10:  [30->0(30), 0->39(39), 0->43(43), 27->1(26), 32->1(31), 1->41(40)]
processing 52 in 10:  [34->0(34), 0->35(35), 0->51(51), 1->2(1), 5->1(4), 1->19(18)]
processing 52 in 10:  [39->0(39), 0->41(41), 0->50(50), 11->1(10), 17->1(16), 1->28(27)]
processing 52 in 10:  [0->52(52), 1->2(1), 3->1(2), 1->14(13), 1->22(21), 47->1(46)]
processing 52 in 10:  [0->52(52), 1->3(2), 1->4(3), 1->4(3), 30->1(29), 30->1(29), 1->52(51)]
processing 52 in 10:  [0->52(52), 1->4(3), 9->1(8), 1->13(12), 1->40(39), 45->1(44)]
processing 52 in 10:  [0->52(52), 5->1(4), 5->1(4), 1->8(7), 1->21(20), 48->1(47)]
processing 52 in 10:  [0->52(52), 6->1(5), 1->32(31), 40->1(39), 1->47(46), 1->49(48)]
processing 52 in 10:  [0->52(52), 8->1(7), 1->11(10), 18->1(17), 37->1(36), 48->1(47)]
processing 52 in 10:  [0->52(52), 10->1(9), 11->1(10), 15->1(14), 20->1(19), 19->10(9), 15->11(4)]
processing 52 in 10:  [0->52(52), 12->1(11), 1->29(28), 35->1(34), 1->41(40), 1->44(43)]
processing 52 in 10:  [0->52(52), 15->1(14), 1->28(27), 29->1(28), 1->48(47), 50->1(49)]
processing 52 in 10:  [0->52(52), 19->1(18), 35->1(34), 19->16(3), 19->34(15), 19->35(16), 19->52(33)]
processing 52 in 10:  [0->52(52), 26->1(25), 28->1(27), 10->26(16), 17->26(9), 9->10(1), 10->28(18)]
processing 52 in 10:  [0->52(52), 53->1(52), 12->52(40), 12->52(40), 12->52(40), 34->52(18), 52->36(16)]
processing 55 in 8:  [0->12(12), 0->17(17), 0->17(17), 0->21(21)]
processing 54 in 9:  [0->2(2), 24->0(24), 26->0(26), 28->0(28), 0->43(43)]
processing 54 in 9:  [0->3(3), 33->0(33), 0->38(38), 0->46(46), 1->33(32)]
processing 54 in 9:  [4->0(4), 0->6(6), 8->0(8), 0->29(29), 31->0(31)]
processing 54 in 9:  [5->0(5), 0->16(16), 20->0(20), 0->27(27), 29->0(29)]
processing 54 in 9:  [0->7(7), 13->0(13), 17->0(17), 21->0(21), 34->0(34)]
processing 54 in 9:  [8->0(8), 0->17(17), 0->45(45), 1->2(1), 1->31(30)]
processing 54 in 9:  [10->0(10), 0->13(13), 0->30(30), 0->32(32), 33->0(33)]
processing 54 in 9:  [12->0(12), 0->22(22), 0->44(44), 1->25(24), 1->25(24), 44->1(43)]
processing 54 in 9:  [15->0(15), 0->16(16), 0->37(37), 41->0(41), 49->0(49)]
processing 54 in 9:  [0->19(19), 0->26(26), 0->32(32), 0->35(35), 0->43(43)]
processing 54 in 9:  [24->0(24), 0->39(39), 0->39(39), 7->1(6), 1->24(23), 28->1(27)]
processing 54 in 9:  [0->54(54), 1->3(2), 1->13(12), 28->1(27), 45->1(44)]
processing 54 in 9:  [0->54(54), 55->1(54), 54->22(32), 54->29(25), 54->48(6), 54->55(1)]
processing 53 in 10:  [0->2(2), 4->0(4), 0->20(20), 21->0(21), 23->0(23)]
processing 53 in 10:  [0->2(2), 9->0(9), 12->0(12), 12->0(12), 0->30(30), 42->0(42)]
processing 53 in 10:  [0->2(2), 0->17(17), 0->19(19), 32->0(32), 0->47(47), 1->10(9)]
processing 53 in 10:  [0->2(2), 0->51(51), 2->1(1), 27->1(26), 27->1(26), 2->26(24), 37->2(35)]
processing 53 in 10:  [2->0(2), 0->3(3), 0->12(12), 24->0(24), 24->0(24), 0->26(26)]
processing 53 in 10:  [2->0(2), 7->0(7), 7->0(7), 16->0(16), 34->0(34), 0->38(38)]
processing 53 in 10:  [2->0(2), 13->0(13), 0->20(20), 0->20(20), 32->0(32), 33->0(33)]
processing 53 in 10:  [2->0(2), 0->25(25), 0->30(30), 1->9(8), 1->12(11), 29->1(28)]
processing 53 in 10:  [0->3(3), 4->0(4), 0->18(18), 0->19(19), 25->0(25), 0->42(42)]
processing 53 in 10:  [0->3(3), 9->0(9), 0->15(15), 0->44(44), 1->45(44), 1->46(45)]
processing 53 in 10:  [0->3(3), 0->17(17), 0->25(25), 0->27(27), 0->42(42)]
processing 53 in 10:  [0->3(3), 0->50(50), 2->1(1), 53->1(52), 13->2(11), 23->2(21)]
processing 53 in 10:  [3->0(3), 0->4(4), 0->12(12), 0->40(40), 35->1(34), 1->40(39)]
processing 53 in 10:  [3->0(3), 8->0(8), 0->28(28), 0->28(28), 0->43(43), 0->49(49)]
processing 53 in 10:  [3->0(3), 15->0(15), 0->35(35), 0->36(36), 14->1(13), 1->26(25)]
processing 53 in 10:  [3->0(3), 32->0(32), 0->36(36), 40->0(40), 43->0(43)]
processing 53 in 10:  [0->4(4), 0->7(7), 0->11(11), 18->0(18), 0->49(49), 50->1(49)]
processing 53 in 10:  [0->4(4), 0->13(13), 0->14(14), 0->22(22), 1->25(24), 1->46(45)]
processing 53 in 10:  [0->4(4), 23->0(23), 24->0(24), 0->48(48), 0->48(48), 1->23(22), 1->23(22)]
processing 53 in 10:  [4->0(4), 4->0(4), 5->0(5), 0->6(6), 19->0(19), 20->0(20)]
processing 53 in 10:  [4->0(4), 0->8(8), 16->0(16), 0->31(31), 0->34(34), 27->1(26)]
processing 53 in 10:  [4->0(4), 14->0(14), 0->33(33), 0->38(38), 20->1(19), 1->24(23)]
processing 53 in 10:  [4->0(4), 0->28(28), 0->29(29), 54->1(53), 16->4(12), 4->22(18)]
processing 53 in 10:  [0->5(5), 0->8(8), 0->11(11), 0->13(13), 25->0(25)]
processing 53 in 10:  [0->5(5), 0->14(14), 34->0(34), 0->35(35), 0->35(35), 0->48(48)]
processing 53 in 10:  [0->5(5), 0->27(27), 32->0(32), 33->0(33), 0->40(40), 0->46(46)]
processing 53 in 10:  [5->0(5), 5->0(5), 13->0(13), 14->0(14), 0->24(24), 43->0(43)]
processing 53 in 10:  [5->0(5), 10->0(10), 10->0(10), 0->12(12), 0->24(24), 0->30(30)]
processing 53 in 10:  [5->0(5), 0->19(19), 0->19(19), 0->19(19), 0->21(21), 0->29(29)]
processing 53 in 10:  [0->6(6), 0->6(6), 0->15(15), 25->0(25), 28->0(28), 0->35(35)]
processing 53 in 10:  [0->6(6), 11->0(11), 14->0(14), 14->0(14), 45->0(45), 51->0(51)]
processing 53 in 10:  [0->6(6), 20->0(20), 0->25(25), 0->25(25), 0->29(29), 48->0(48)]
processing 53 in 10:  [0->6(6), 0->47(47), 1->17(16), 31->1(30), 40->1(39), 11->6(5)]
processing 53 in 10:  [6->0(6), 0->10(10), 0->10(10), 0->11(11), 25->0(25), 0->39(39)]
processing 53 in 10:  [6->0(6), 0->18(18), 0->18(18), 19->0(19), 0->42(42), 18->1(17), 37->1(36)]
processing 53 in 10:  [0->7(7), 0->7(7), 0->13(13), 0->18(18), 0->19(19), 25->0(25)]
processing 53 in 10:  [0->7(7), 12->0(12), 21->0(21), 0->23(23), 34->0(34)]
processing 53 in 10:  [0->7(7), 0->23(23), 0->23(23), 0->32(32), 33->0(33), 0->40(40)]
processing 53 in 10:  [0->7(7), 0->46(46), 54->1(53), 19->7(12), 7->26(19), 19->21(2), 33->19(14)]
processing 53 in 10:  [7->0(7), 0->12(12), 0->48(48), 1->2(1), 1->7(6), 1->17(16)]
processing 53 in 10:  [7->0(7), 22->0(22), 0->28(28), 0->32(32), 0->42(42)]
processing 53 in 10:  [0->8(8), 9->0(9), 0->17(17), 0->37(37), 10->1(9), 14->1(13)]
processing 53 in 10:  [0->8(8), 0->17(17), 0->19(19), 0->19(19), 21->0(21), 30->0(30)]
processing 53 in 10:  [0->8(8), 0->45(45), 1->4(3), 1->4(3), 16->1(15), 45->1(44), 4->14(10)]
processing 53 in 10:  [8->0(8), 0->10(10), 39->0(39), 41->0(41), 0->44(44)]
processing 53 in 10:  [8->0(8), 18->0(18), 21->0(21), 0->26(26), 0->31(31)]
processing 53 in 10:  [0->9(9), 0->9(9), 23->0(23), 28->0(28), 29->0(29), 41->0(41)]
processing 53 in 10:  [0->9(9), 16->0(16), 0->23(23), 0->37(37), 27->1(26), 51->1(50)]
processing 53 in 10:  [0->9(9), 0->44(44), 1->3(2), 1->17(16), 26->1(25), 1->49(48)]
processing 53 in 10:  [9->0(9), 0->11(11), 0->51(51), 21->1(20), 1->23(22), 38->1(37)]
processing 53 in 10:  [9->0(9), 20->0(20), 23->0(23), 0->29(29), 0->29(29), 0->37(37)]
processing 53 in 10:  [0->10(10), 0->11(11), 0->22(22), 0->34(34), 0->34(34), 36->0(36)]
processing 53 in 10:  [0->10(10), 19->0(19), 0->31(31), 0->31(31), 33->1(32), 1->44(43)]
processing 53 in 10:  [0->10(10), 0->43(43), 1->15(14), 1->19(18), 20->1(19), 27->1(26)]
processing 53 in 10:  [10->0(10), 15->0(15), 0->16(16), 24->0(24), 0->31(31)]
processing 53 in 10:  [10->0(10), 0->30(30), 0->38(38), 0->38(38), 0->44(44), 51->0(51)]
processing 53 in 10:  [0->11(11), 0->17(17), 0->17(17), 33->0(33), 0->41(41), 25->1(24)]
processing 53 in 10:  [0->11(11), 0->42(42), 1->4(3), 5->1(4), 1->32(31), 1->36(35)]
processing 53 in 10:  [11->0(11), 0->14(14), 0->14(14), 0->33(33), 0->34(34), 36->0(36)]
processing 53 in 10:  [11->0(11), 0->26(26), 0->38(38), 6->1(5), 1->9(8), 1->25(24)]
processing 53 in 10:  [0->12(12), 15->0(15), 17->0(17), 0->34(34), 0->39(39), 12->1(11)]
processing 53 in 10:  [0->12(12), 31->0(31), 0->36(36), 0->36(36), 1->2(1), 30->1(29)]
processing 53 in 10:  [12->0(12), 0->13(13), 0->52(52), 2->1(1), 53->1(52), 2->11(9)]
