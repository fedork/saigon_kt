> Task :checkKotlinGradlePluginConfigurationErrors SKIPPED
> Task :compileKotlin UP-TO-DATE
> Task :compileJava NO-SOURCE
> Task :processResources NO-SOURCE
> Task :classes UP-TO-DATE

> Task :run
can solve 0 in 0 moves with (1) [] / [] t=7.356125ms
can solve 1 in 1 moves with (1) [] / [0->1(1)] t=13.040334ms
can solve 2 in 2 moves with (1) [] / [0->1(1), 0->1(1)] t=1.147833ms
can solve 3 in 3 moves with (1) [] / [0->1(1), 0->1(1), 0->1(1)] t=1.690042ms
can solve 4 in 4 moves with (1) [] / [0->1(1), 0->1(1), 0->1(1), 0->1(1)] t=1.477542ms
can solve 5 in 5 moves with (1) [] / [0->1(1), 0->1(1), 0->1(1), 0->1(1), 0->1(1)] t=6.246125ms
can solve 6 in 5 moves with (1) [4, 2] / [0->2(2), 0->4(4), 4->1(3), 2->4(2), 4->1(3)] t=3.219084ms
can solve 7 in 6 moves with (1) [4, 2] / [0->1(1), 0->2(2), 0->4(4), 4->1(3), 2->4(2), 4->1(3)] t=8.724875ms
can solve 8 in 7 moves with (1) [4, 2] / [0->1(1), 0->1(1), 0->2(2), 0->4(4), 4->1(3), 2->4(2), 4->1(3)] t=30.714333ms
can solve 9 in 7 moves with (1) [6, 2] / [0->2(2), 0->6(6), 6->1(5), 1->0(1), 0->2(2), 2->6(4), 6->1(5)] t=6.132458ms
can solve 10 in 6 moves with (1) [6, 2] / [0->2(2), 0->2(2), 0->6(6), 6->1(5), 2->6(4), 6->1(5)] t=24us
can solve 11 in 7 moves with (1) [6, 2] / [0->1(1), 0->2(2), 0->2(2), 0->6(6), 6->1(5), 2->6(4), 6->1(5)] t=47.738083ms
can solve 12 in 7 moves with (1) [9, 6, 5, 3] / [0->3(3), 0->9(9), 9->1(8), 3->6(3), 6->9(3), 9->5(4), 5->1(4)] t=37.028125ms
can solve 13 in 8 moves with (1) [9, 6, 5, 3] / [0->1(1), 0->3(3), 0->9(9), 9->1(8), 3->6(3), 6->9(3), 9->5(4), 5->1(4)] t=102.541250ms
can solve 14 in 7 moves with (1) [8, 2] / [0->2(2), 0->2(2), 0->2(2), 0->8(8), 8->1(7), 2->8(6), 8->1(7)] t=24.708us
can solve 15 in 7 moves with (1) [6, 3] / [0->3(3), 0->6(6), 0->6(6), 6->1(5), 6->1(5), 3->6(3), 6->1(5)] t=50.801958ms
can solve 16 in 8 moves with (1) [6, 3] / [0->1(1), 0->3(3), 0->6(6), 0->6(6), 6->1(5), 6->1(5), 3->6(3), 6->1(5)] t=388.146834ms
can solve 17 in 9 moves with (1) [6, 3] / [0->1(1), 0->1(1), 0->3(3), 0->6(6), 0->6(6), 6->1(5), 6->1(5), 3->6(3), 6->1(5)] t=1.521035375s
can solve 18 in 8 moves with (1) [10, 2] / [0->2(2), 0->2(2), 0->2(2), 0->2(2), 0->10(10), 10->1(9), 2->10(8), 10->1(9)] t=32.209us
can solve 19 in 8 moves with (1) [8, 3] / [0->3(3), 0->8(8), 0->8(8), 8->1(7), 1->3(2), 8->1(7), 3->8(5), 8->1(7)] t=719.111541ms
can solve 20 in 9 moves with (1) [8, 3] / [0->1(1), 0->3(3), 0->8(8), 0->8(8), 8->1(7), 1->3(2), 8->1(7), 3->8(5), 8->1(7)] t=3.489025167s
can solve 21 in 8 moves with (1) [15, 9, 8, 3] / [0->3(3), 0->3(3), 0->15(15), 15->1(14), 3->9(6), 9->15(6), 15->8(7), 8->1(7)] t=28.416us
can solve 22 in 8 moves with (1) [12, 8, 6, 4] / [0->4(4), 0->6(6), 0->12(12), 12->1(11), 4->8(4), 6->12(6), 8->12(4), 12->1(11)] t=1.599785709s
can solve 23 in 9 moves with (1) [12, 8, 6, 4] / [0->1(1), 0->4(4), 0->6(6), 0->12(12), 12->1(11), 4->8(4), 6->12(6), 8->12(4), 12->1(11)] t=6.354254750s
can solve 24 in 8 moves with (1) [9, 3] / [0->3(3), 0->3(3), 0->9(9), 0->9(9), 9->1(8), 9->1(8), 3->9(6), 9->1(8)] t=20.458us
can solve 25 in 9 moves with (1) [9, 3] / [0->1(1), 0->3(3), 0->3(3), 0->9(9), 0->9(9), 9->1(8), 9->1(8), 3->9(6), 9->1(8)] t=10.187486833s
can solve 26 in 8 moves with (1) [14, 8, 4] / [0->4(4), 0->8(8), 0->14(14), 14->1(13), 4->8(4), 8->14(6), 8->14(6), 14->1(13)] t=22.417us
can solve 27 in 9 moves with (1) [14, 8, 4] / [0->1(1), 0->4(4), 0->8(8), 0->14(14), 14->1(13), 4->8(4), 8->14(6), 8->14(6), 14->1(13)] t=22.617765208s
can solve 28 in 9 moves with (1) [11, 3] / [0->3(3), 0->3(3), 0->11(11), 0->11(11), 11->1(10), 1->3(2), 11->1(10), 3->11(8), 11->1(10)] t=23.162775167s
can solve 29 in 10 moves with (1) [11, 3] / [0->1(1), 0->3(3), 0->3(3), 0->11(11), 0->11(11), 11->1(10), 1->3(2), 11->1(10), 3->11(8), 11->1(10)] t=2m 13.526758667s
can solve 30 in 9 moves with (1) [21, 12, 11, 3] / [0->3(3), 0->3(3), 0->3(3), 0->21(21), 21->1(20), 3->12(9), 12->21(9), 21->11(10), 11->1(10)] t=23.542us
can solve 31 in 9 moves with (1) [18, 11, 9, 4] / [0->4(4), 0->9(9), 0->18(18), 18->1(17), 1->4(3), 4->11(7), 9->18(9), 11->18(7), 18->1(17)] t=50.542785459s
can solve 32 in 10 moves with (1) [18, 11, 9, 4] / [0->1(1), 0->4(4), 0->9(9), 0->18(18), 18->1(17), 1->4(3), 4->11(7), 9->18(9), 11->18(7), 18->1(17)] t=3m 42.599929500s
can solve 33 in 9 moves with (1) [12, 3] / [0->3(3), 0->3(3), 0->3(3), 0->12(12), 0->12(12), 12->1(11), 12->1(11), 3->12(9), 12->1(11)] t=21.75us
can solve 34 in 9 moves with (1) [19, 10, 8, 4] / [0->19(19), 19->8(11), 8->1(7), 8->4(4), 4->0(4), 0->19(19), 19->1(18), 19->10(9), 10->1(9)] t=1m 29.526586625s
can solve 35 in 9 moves with (1) [20, 11, 4] / [0->4(4), 0->11(11), 0->20(20), 20->1(19), 1->4(3), 4->11(7), 11->20(9), 11->20(9), 20->1(19)] t=1m 30.170829500s
can solve 36 in 10 moves with (1) [20, 11, 4] / [0->1(1), 0->4(4), 0->11(11), 0->20(20), 20->1(19), 1->4(3), 4->11(7), 11->20(9), 11->20(9), 20->1(19)] t=11m 28.546782s
can solve 37 in 10 moves with (1) [20, 12, 10, 4] / [0->4(4), 0->4(4), 0->20(20), 20->1(19), 1->0(1), 0->10(10), 4->12(8), 10->20(10), 12->20(8), 20->1(19)] t=2m 5.049611041s
can solve 38 in 9 moves with (1) [20, 12, 10, 4] / [0->4(4), 0->4(4), 0->10(10), 0->20(20), 20->1(19), 4->12(8), 10->20(10), 12->20(8), 20->1(19)] t=25us
can solve 39 in 10 moves with (1) [20, 12, 10, 4] / [0->1(1), 0->4(4), 0->4(4), 0->10(10), 0->20(20), 20->1(19), 4->12(8), 10->20(10), 12->20(8), 20->1(19)] t=11m 18.114572458s
can solve 40 in 9 moves with (1) [25, 10, 9, 5] / [0->5(5), 0->10(10), 0->25(25), 25->1(24), 5->10(5), 10->25(15), 25->9(16), 9->1(8), 9->1(8)] t=20.5us
can solve 41 in 10 moves with (1) [25, 10, 9, 5] / [0->1(1), 0->5(5), 0->10(10), 0->25(25), 25->1(24), 5->10(5), 10->25(15), 25->9(16), 9->1(8), 9->1(8)] t=13m 41.816348958s
can solve 42 in 9 moves with (1) [22, 12, 4] / [0->4(4), 0->4(4), 0->12(12), 0->22(22), 22->1(21), 4->12(8), 12->22(10), 12->22(10), 22->1(21)] t=24.875us
can solve 43 in 10 moves with (1) [22, 12, 4] / [0->1(1), 0->4(4), 0->4(4), 0->12(12), 0->22(22), 22->1(21), 4->12(8), 12->22(10), 12->22(10), 22->1(21)] t=28m 29.138727125s
can solve 44 in 10 moves with (1) [12, 4] / [0->4(4), 0->4(4), 0->12(12), 0->12(12), 0->12(12), 12->1(11), 12->1(11), 12->1(11), 4->12(8), 12->1(11)] t=36m 22.213220542s
can solve 45 in 10 moves with (1) [17, 9, 6] / [0->17(17), 0->17(17), 17->1(16), 17->6(11), 6->0(6), 0->17(17), 6->1(5), 17->1(16), 17->9(8), 9->1(8)] t=1h 5m 6.132986250s
can solve 46 in 10 moves with (1) [25, 12, 8, 4] / [0->25(25), 25->12(13), 12->8(4), 8->4(4), 4->0(4), 0->25(25), 25->1(24), 25->12(13), 12->1(11), 12->1(11)] t=55m 42.750900583s
can solve 47 in 10 moves with (1) [26, 15, 13, 4] / [0->4(4), 0->4(4), 0->13(13), 0->26(26), 26->1(25), 1->4(3), 4->15(11), 13->26(13), 15->26(11), 26->1(25)] t=51m 15.679967334s
can solve 48 in 10 moves with (1) [33, 18, 17, 12, 9, 6] / [0->6(6), 0->9(9), 0->33(33), 33->1(32), 6->12(6), 9->18(9), 12->18(6), 18->33(15), 33->17(16), 17->1(16)] t=1h 24m 4.905474042s
can solve 49 in 10 moves with (1) [19, 11, 6] / [0->11(11), 0->19(19), 0->19(19), 19->1(18), 1->6(5), 19->1(18), 6->11(5), 11->19(8), 11->19(8), 19->1(18)] t=2h 26m 11.136110042s
can solve 50 in 10 moves with (1) [27, 14, 12, 8, 4] / [0->27(27), 27->12(15), 12->1(11), 12->8(4), 8->4(4), 4->0(4), 0->27(27), 27->1(26), 27->14(13), 14->1(13)] t=1h 27m 1.562349s
can solve 51 in 10 moves with (1) [28, 15, 4] / [0->4(4), 0->4(4), 0->15(15), 0->28(28), 28->1(27), 1->4(3), 4->15(11), 15->28(13), 15->28(13), 28->1(27)] t=1h 19m 10.403949667s
can solve 52 in 11 moves with (1) [28, 15, 4] / [0->1(1), 0->4(4), 0->4(4), 0->15(15), 0->28(28), 28->1(27), 1->4(3), 4->15(11), 15->28(13), 15->28(13), 28->1(27)] t=12h 46m 32.732089s
can solve 53 in 11 moves with (1) [28, 16, 14, 4] / [0->4(4), 0->4(4), 0->4(4), 0->28(28), 28->1(27), 1->0(1), 0->14(14), 4->16(12), 14->28(14), 16->28(12), 28->1(27)] t=2h 33m 27.612489125s
can solve 54 in 10 moves with (1) [28, 16, 14, 4] / [0->4(4), 0->4(4), 0->4(4), 0->14(14), 0->28(28), 28->1(27), 4->16(12), 14->28(14), 16->28(12), 28->1(27)] t=49.667us
can solve 55 in 10 moves with (1) [24, 12, 10, 5] / [0->12(12), 0->24(24), 24->10(14), 10->1(9), 10->5(5), 5->0(5), 0->24(24), 24->1(23), 12->24(12), 24->1(23)] t=2h 50m 41.174036042s
can solve 56 in 10 moves with (1) [37, 14, 13, 5] / [0->5(5), 0->14(14), 0->37(37), 37->1(36), 1->5(4), 5->14(9), 14->37(23), 37->13(24), 13->1(12), 13->1(12)] t=2h 53m 40.490829291s
can solve 57 in 10 moves with (1) [39, 21, 20, 12, 6] / [0->6(6), 0->12(12), 0->39(39), 39->1(38), 6->12(6), 12->21(9), 12->21(9), 21->39(18), 39->20(19), 20->1(19)] t=3h 40m 45.305084709s
